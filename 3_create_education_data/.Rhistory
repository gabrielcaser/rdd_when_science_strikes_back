## Ver por que não tenho mais a variável STEMJOB e só STEMJOB_ML
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1))) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors %>%
dplyr::group_by(id_municipio, coorte, resultado) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop") %>%
dplyr::filter(n > 1L)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
View(df_mayors)
# Program - This program merges all data to create the rdd dataset
# TO DO -------------------------------------------------------------------
## Ver por que não tenho mais a variável STEMJOB e só STEMJOB_ML
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1))) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors %>%
dplyr::group_by(id_municipio, coorte, resultado) %>%
dplyr::summarise(n = dplyr::n(), .groups = "drop") %>%
dplyr::filter(n > 1L)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_2_lugar', 'dif_votos_3_lugar'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
## Keeping only municipalities where at least 1 candidate has a STEM background
df_mayors$n_stem_background <- df_mayors$stem_background_eleito + df_mayors$stem_background_segundo + df_mayors$stem_background_terceiro
df_mayors <- df_mayors %>%
group_by(id_municipio, coorte) %>%
mutate(n_stem_background = sum(stem_background_eleito, stem_background_segundo, stem_background_terceiro, na.rm = TRUE)) %>%
ungroup()
df_mayors <- df_mayors %>%
filter(n_stem_background >= 1)
## Defining cities to use third most voted candidate
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 0 & df_mayors$stem_background_segundo == 0 & df_mayors$stem_background_terceiro == 1, 1, 0)
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 1 & df_mayors$stem_background_segundo == 1 & df_mayors$stem_background_terceiro == 0, 1, df_mayors$use_third)
## Replace values in variables ending with "_segundo" if use_third == 1
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
# Get a list of variable names ending with "_segundo"
segundo_columns <- colnames(df_mayors)[endsWith(colnames(df_mayors), "_segundo")]
# Iterate through the "_segundo" columns and replace values based on the condition
for (col_name in segundo_columns) {
df_mayors[[col_name]] <- ifelse(df_mayors$use_third != 1, df_mayors[[col_name]],
df_mayors[[sub("_segundo", "_terceiro", col_name)]])
}
# Iterate through the "_segundo" columns and replace their names
for (col_name in segundo_columns) {
new_col_name <- sub("_segundo", "_naoeleito", col_name)
df_mayors <- df_mayors %>%
rename(!!new_col_name := !!col_name)
}
# Drop variables ending with "_terceiro"
df_mayors <- df_mayors %>%
select(-ends_with("_terceiro"))
View(df_mayors)
# Program - This program merges all data to create the rdd dataset
# TO DO -------------------------------------------------------------------
## Ver por que não tenho mais a variável STEMJOB e só STEMJOB_ML
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1)),
df_votos_segundo = dif_votos_2_lugar,
df_votos_terceiro = dif_votos_3_lugar) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_segundo', 'dif_votos_terceiro'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
# Program - This program merges all data to create the rdd dataset
# TO DO -------------------------------------------------------------------
## Ver por que não tenho mais a variável STEMJOB e só STEMJOB_ML
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1)),
dif_votos_segundo = dif_votos_2_lugar,
dif_votos_terceiro = dif_votos_3_lugar) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_segundo', 'dif_votos_terceiro'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
## Keeping only municipalities where at least 1 candidate has a STEM background
df_mayors$n_stem_background <- df_mayors$stem_background_eleito + df_mayors$stem_background_segundo + df_mayors$stem_background_terceiro
df_mayors <- df_mayors %>%
group_by(id_municipio, coorte) %>%
mutate(n_stem_background = sum(stem_background_eleito, stem_background_segundo, stem_background_terceiro, na.rm = TRUE)) %>%
ungroup()
df_mayors <- df_mayors %>%
filter(n_stem_background >= 1)
## Defining cities to use third most voted candidate
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 0 & df_mayors$stem_background_segundo == 0 & df_mayors$stem_background_terceiro == 1, 1, 0)
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 1 & df_mayors$stem_background_segundo == 1 & df_mayors$stem_background_terceiro == 0, 1, df_mayors$use_third)
## Replace values in variables ending with "_segundo" if use_third == 1
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
# Get a list of variable names ending with "_segundo"
segundo_columns <- colnames(df_mayors)[endsWith(colnames(df_mayors), "_segundo")]
# Iterate through the "_segundo" columns and replace values based on the condition
for (col_name in segundo_columns) {
df_mayors[[col_name]] <- ifelse(df_mayors$use_third != 1, df_mayors[[col_name]],
df_mayors[[sub("_segundo", "_terceiro", col_name)]])
}
# Iterate through the "_segundo" columns and replace their names
for (col_name in segundo_columns) {
new_col_name <- sub("_segundo", "_naoeleito", col_name)
df_mayors <- df_mayors %>%
rename(!!new_col_name := !!col_name)
}
# Drop variables ending with "_terceiro"
df_mayors <- df_mayors %>%
select(-ends_with("_terceiro"))
View(df_mayors)
glimpse(df_mayors)
# Program - This program merges all data to create the rdd dataset
# TO DO -------------------------------------------------------------------
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
# Identify factor columns
factor_columns <- sapply(df_mayors, is.factor)
# Convert factor columns to character
df_mayors[factor_columns] <- lapply(df_mayors[factor_columns], as.character)
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1)),
dif_votos_segundo = dif_votos_2_lugar,
dif_votos_terceiro = dif_votos_3_lugar) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_segundo', 'dif_votos_terceiro'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
## Keeping only municipalities where at least 1 candidate has a STEM background
df_mayors$n_stem_background <- df_mayors$stem_background_eleito + df_mayors$stem_background_segundo + df_mayors$stem_background_terceiro
df_mayors <- df_mayors %>%
group_by(id_municipio, coorte) %>%
mutate(n_stem_background = sum(stem_background_eleito, stem_background_segundo, stem_background_terceiro, na.rm = TRUE)) %>%
ungroup()
df_mayors <- df_mayors %>%
filter(n_stem_background >= 1)
## Defining cities to use third most voted candidate
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 0 & df_mayors$stem_background_segundo == 0 & df_mayors$stem_background_terceiro == 1, 1, 0)
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 1 & df_mayors$stem_background_segundo == 1 & df_mayors$stem_background_terceiro == 0, 1, df_mayors$use_third)
## Replace values in variables ending with "_segundo" if use_third == 1
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
# Get a list of variable names ending with "_segundo"
segundo_columns <- colnames(df_mayors)[endsWith(colnames(df_mayors), "_segundo")]
# Iterate through the "_segundo" columns and replace values based on the condition
for (col_name in segundo_columns) {
df_mayors[[col_name]] <- ifelse(df_mayors$use_third != 1, df_mayors[[col_name]],
df_mayors[[sub("_segundo", "_terceiro", col_name)]])
}
# Iterate through the "_segundo" columns and replace their names
for (col_name in segundo_columns) {
new_col_name <- sub("_segundo", "_naoeleito", col_name)
df_mayors <- df_mayors %>%
rename(!!new_col_name := !!col_name)
}
# Drop variables ending with "_terceiro"
df_mayors <- df_mayors %>%
select(-ends_with("_terceiro"))
View(df_mayors)
# renaming variable
df_mayors <- df_mayors %>%
rename(dif_votos = dif_votos_naoeleito)
View(df_mayors)
df_mayors <- df_mayors %>%
select(-use_third, -n_stem_background)
df_health <- readRDS(paste0(baseline_data_dir, "/health_data.Rds"))
df_ideology <- readRDS(paste0(baseline_data_dir, "/ideology_data.Rds"))
df_ideology <- df_ideology %>%
filter(coorte == 2016 | coorte == 2020) # keeping election coorte years
df_density <- readRDS(paste0(baseline_data_dir, "/density_data.Rds"))
df_political <- readRDS(paste0(baseline_data_dir, "/political_data.Rds"))
df_npi <- readRDS(paste0(baseline_data_dir, "/npi_data.Rds"))
# Covid Data --------------------------------------------------------------
df_covid <- readRDS(paste0(covid_data_dir, "/covid_data.Rds"))
df_covid <- df_covid %>%
ungroup()
# Merging datasets --------------------------------------------------------
df <- left_join(df_mayors, df_npi, by = c("id_municipio")) # 29% of municipalities with missing data. That is expected since not everyone responded the survey
df <- left_join(df, df_covid, by = c("id_municipio", "coorte")) # 4 municipalities with missing data
df <- left_join(df, df_health, by = c("id_municipio"))
df <- left_join(df, df_density, by = c("id_municipio")) # 2 municipalities with missing data
df <- left_join(df, df_ideology, by = c("id_municipio", "coorte"))
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
View(df)
df <- df %>%
rename(sigla_partido_eleito = sigla_partido)
df <- df %>%
rename(sigla_partido_eleito = sigla_partido)
df <- df %>%
rename(sigla_partido = sigla_partido_eleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
df <- df %>%
rename(sigla_partido = sigla_partido_naoeleito)
df <- df %>%
rename(sigla_partido_eleito = sigla_partido)
df <- df %>%
rename(sigla_partido = sigla_partido_naoeleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
df <- df %>%
rename(sigla_partido_naoeleito = sigla_partido)
View(df)
# Program - This program merges all data to create the rdd dataset
# TO DO -------------------------------------------------------------------
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
# Identify factor columns
factor_columns <- sapply(df_mayors, is.factor)
# Convert factor columns to character
df_mayors[factor_columns] <- lapply(df_mayors[factor_columns], as.character)
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1)),
dif_votos_segundo = dif_votos_2_lugar,
dif_votos_terceiro = dif_votos_3_lugar) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_segundo', 'dif_votos_terceiro'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
## Keeping only municipalities where at least 1 candidate has a STEM background
df_mayors$n_stem_background <- df_mayors$stem_background_eleito + df_mayors$stem_background_segundo + df_mayors$stem_background_terceiro
df_mayors <- df_mayors %>%
group_by(id_municipio, coorte) %>%
mutate(n_stem_background = sum(stem_background_eleito, stem_background_segundo, stem_background_terceiro, na.rm = TRUE)) %>%
ungroup()
df_mayors <- df_mayors %>%
filter(n_stem_background >= 1)
## Defining cities to use third most voted candidate
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 0 & df_mayors$stem_background_segundo == 0 & df_mayors$stem_background_terceiro == 1, 1, 0)
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 1 & df_mayors$stem_background_segundo == 1 & df_mayors$stem_background_terceiro == 0, 1, df_mayors$use_third)
## Replace values in variables ending with "_segundo" if use_third == 1
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
# Get a list of variable names ending with "_segundo"
segundo_columns <- colnames(df_mayors)[endsWith(colnames(df_mayors), "_segundo")]
# Iterate through the "_segundo" columns and replace values based on the condition
for (col_name in segundo_columns) {
df_mayors[[col_name]] <- ifelse(df_mayors$use_third != 1, df_mayors[[col_name]],
df_mayors[[sub("_segundo", "_terceiro", col_name)]])
}
# Iterate through the "_segundo" columns and replace their names
for (col_name in segundo_columns) {
new_col_name <- sub("_segundo", "_naoeleito", col_name)
df_mayors <- df_mayors %>%
rename(!!new_col_name := !!col_name)
}
# Drop variables ending with "_terceiro"
df_mayors <- df_mayors %>%
select(-ends_with("_terceiro"))
# renaming variable
df_mayors <- df_mayors %>%
rename(dif_votos = dif_votos_naoeleito)
# droping variables
df_mayors <- df_mayors %>%
select(-use_third, -n_stem_background)
# Baseline and NPI Data -----------------------------------------------------------
df_health <- readRDS(paste0(baseline_data_dir, "/health_data.Rds"))
df_ideology <- readRDS(paste0(baseline_data_dir, "/ideology_data.Rds"))
df_ideology <- df_ideology %>%
filter(coorte == 2016 | coorte == 2020) # keeping election coorte years
df_density <- readRDS(paste0(baseline_data_dir, "/density_data.Rds"))
df_political <- readRDS(paste0(baseline_data_dir, "/political_data.Rds"))
df_npi <- readRDS(paste0(baseline_data_dir, "/npi_data.Rds"))
# Covid Data --------------------------------------------------------------
df_covid <- readRDS(paste0(covid_data_dir, "/covid_data.Rds"))
df_covid <- df_covid %>%
ungroup()
# Merging datasets --------------------------------------------------------
df <- left_join(df_mayors, df_npi, by = c("id_municipio")) # 29% of municipalities with missing data. That is expected since not everyone responded the survey
df <- left_join(df, df_covid, by = c("id_municipio", "coorte")) # 4 municipalities with missing data
df <- left_join(df, df_health, by = c("id_municipio"))
df <- left_join(df, df_density, by = c("id_municipio")) # 2 municipalities with missing data
df <- left_join(df, df_ideology, by = c("id_municipio", "coorte"))
df <- df %>%
rename(sigla_partido = sigla_partido_eleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
View(df)
df <- df %>%
rename(sigla_partido_eleito = sigla_partido,
ideology_party_eleito = ideology_party)
df <- df %>%
rename(sigla_partido = sigla_partido_naoeleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
# Program - This program merges all data to create the rdd dataset
# TO DO -------------------------------------------------------------------
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libs --------------------------------------------------------------------
library(tidyverse)
library(skimr)
library(readxl)
# Directories
work_dir                   = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset"
output_dir                 = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
baseline_data_dir          = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir             = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
mayors_data_dir            = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
set.seed(1234) # making it reproducible
# Mayors Data ----------------------------------------------------
df_mayors <- readRDS(paste0(mayors_data_dir, "/candidates_dataset.Rds"))
df_mayors$id_municipio <- as.character(df_mayors$id_municipio) # changing data type
df_mayors$id_municipio <- substr(df_mayors$id_municipio,1,6) # keeping only 6 first digits
# Identify factor columns
factor_columns <- sapply(df_mayors, is.factor)
# Convert factor columns to character
df_mayors[factor_columns] <- lapply(df_mayors[factor_columns], as.character)
## Choosing the definition of STEM background (treatment) -----------------------------------------
df_mayors <- df_mayors %>%
mutate(stem_background = as.numeric((stem_job == 1 & curso_stem == 1)),
dif_votos_segundo = dif_votos_2_lugar,
dif_votos_terceiro = dif_votos_3_lugar) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors <- df_mayors %>%
filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_segundo', 'dif_votos_terceiro'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
## Keeping only municipalities where at least 1 candidate has a STEM background
df_mayors$n_stem_background <- df_mayors$stem_background_eleito + df_mayors$stem_background_segundo + df_mayors$stem_background_terceiro
df_mayors <- df_mayors %>%
group_by(id_municipio, coorte) %>%
mutate(n_stem_background = sum(stem_background_eleito, stem_background_segundo, stem_background_terceiro, na.rm = TRUE)) %>%
ungroup()
df_mayors <- df_mayors %>%
filter(n_stem_background >= 1)
## Defining cities to use third most voted candidate
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 0 & df_mayors$stem_background_segundo == 0 & df_mayors$stem_background_terceiro == 1, 1, 0)
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 1 & df_mayors$stem_background_segundo == 1 & df_mayors$stem_background_terceiro == 0, 1, df_mayors$use_third)
## Replace values in variables ending with "_segundo" if use_third == 1
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
# Get a list of variable names ending with "_segundo"
segundo_columns <- colnames(df_mayors)[endsWith(colnames(df_mayors), "_segundo")]
# Iterate through the "_segundo" columns and replace values based on the condition
for (col_name in segundo_columns) {
df_mayors[[col_name]] <- ifelse(df_mayors$use_third != 1, df_mayors[[col_name]],
df_mayors[[sub("_segundo", "_terceiro", col_name)]])
}
# Iterate through the "_segundo" columns and replace their names
for (col_name in segundo_columns) {
new_col_name <- sub("_segundo", "_naoeleito", col_name)
df_mayors <- df_mayors %>%
rename(!!new_col_name := !!col_name)
}
# Drop variables ending with "_terceiro"
df_mayors <- df_mayors %>%
select(-ends_with("_terceiro"))
# renaming variable
df_mayors <- df_mayors %>%
rename(dif_votos = dif_votos_naoeleito)
# droping variables
df_mayors <- df_mayors %>%
select(-use_third, -n_stem_background)
# Baseline and NPI Data -----------------------------------------------------------
df_health <- readRDS(paste0(baseline_data_dir, "/health_data.Rds"))
df_ideology <- readRDS(paste0(baseline_data_dir, "/ideology_data.Rds"))
df_ideology <- df_ideology %>%
filter(coorte == 2016 | coorte == 2020) # keeping election coorte years
df_density <- readRDS(paste0(baseline_data_dir, "/density_data.Rds"))
df_political <- readRDS(paste0(baseline_data_dir, "/political_data.Rds"))
df_npi <- readRDS(paste0(baseline_data_dir, "/npi_data.Rds"))
# Covid Data --------------------------------------------------------------
df_covid <- readRDS(paste0(covid_data_dir, "/covid_data.Rds"))
df_covid <- df_covid %>%
ungroup()
# Merging datasets --------------------------------------------------------
df <- left_join(df_mayors, df_npi, by = c("id_municipio")) # 29% of municipalities with missing data. That is expected since not everyone responded the survey
df <- left_join(df, df_covid, by = c("id_municipio", "coorte")) # 4 municipalities with missing data
df <- left_join(df, df_health, by = c("id_municipio"))
df <- left_join(df, df_density, by = c("id_municipio")) # 2 municipalities with missing data
df <- left_join(df, df_ideology, by = c("id_municipio", "coorte"))
df <- df %>%
rename(sigla_partido = sigla_partido_eleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
df <- df %>%
rename(sigla_partido_eleito = sigla_partido,
ideology_party_eleito = ideology_party)
df <- df %>%
rename(sigla_partido = sigla_partido_naoeleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
df <- df %>%
rename(sigla_partido_naoeleito = sigla_partido,
ideology_party_naoeleito = ideology_party)
df$coorte <- as.factor(df$coorte)
View(df)
rm(df_covid, df_density, df_health, df_ideology, df_mayors, df_npi, df_political) # removing dataset
View(df)
