df_mayors <- df_mayors %>%
dplyr::mutate(stem_background = as.numeric((stem_job == 1)),
dif_votos_segundo = dif_votos_2_lugar,
dif_votos_terceiro = dif_votos_3_lugar) # 616 candidates with stem background
## Turn into wide format
df_mayors$resultado <- ifelse(df_mayors$x2_lugar == 'True', 'segundo', df_mayors$resultado) # there is 1 second place more than elected
df_mayors$resultado <- ifelse(df_mayors$x3_lugar == 'True', 'terceiro', df_mayors$resultado)
## removing municipalities with more than one 2 or 3 place (I need to investigate why this is happening. Probably they achieved the same number of votes)
df_mayors <- df_mayors %>%
dplyr::filter(id_municipio != '311920' & id_municipio != '410380')
df_mayors <- pivot_wider(df_mayors, id_cols = c('id_municipio', 'coorte', 'dif_votos_segundo', 'dif_votos_terceiro'), names_from =  'resultado', values_from = c('stem_background','tenure', 'hours', 'tenure_rais', 'cbo_2002', 'cbo_agregado', 'sigla_partido', 'instrucao', 'ocupacao', 'genero', 'raca', 'idade', 'stem_job', 'curso_stem') )
## Keeping only municipalities where at least 1 candidate has a STEM background
df_mayors <- df_mayors %>%
dplyr::group_by(id_municipio, coorte) %>%
dplyr::mutate(n_stem_background = sum(stem_background_eleito, stem_background_segundo, stem_background_terceiro, na.rm = TRUE)) %>%
dplyr::ungroup()
df_mayors <- df_mayors %>%
dplyr::filter(n_stem_background >= 1)
## Defining cities to use third most voted candidate
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito != 1 & df_mayors$stem_background_segundo != 1 & df_mayors$stem_background_terceiro == 1, 1, 0)
df_mayors$use_third <- ifelse(df_mayors$stem_background_eleito == 1 & df_mayors$stem_background_segundo == 1 & df_mayors$stem_background_terceiro != 1, 1, df_mayors$use_third)
## Replace values in variables ending with "_segundo" if use_third == 1
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
#df_mayors$stem_background_naoeleito <- ifelse(df_mayors$use_third != 1, df_mayors$stem_background_segundo, df_mayors$stem_background_terceiro)
# Get a list of variable names ending with "_segundo"
segundo_columns <- colnames(df_mayors)[endsWith(colnames(df_mayors), "_segundo")]
# Iterate through the "_segundo" columns and replace values based on the condition
for (col_name in segundo_columns) {
df_mayors[[col_name]] <- ifelse(df_mayors$use_third != 1, df_mayors[[col_name]],
df_mayors[[sub("_segundo", "_terceiro", col_name)]])
}
# Iterate through the "_segundo" columns and replace their names
for (col_name in segundo_columns) {
new_col_name <- sub("_segundo", "_naoeleito", col_name)
colnames(df_mayors)[colnames(df_mayors) == col_name] <- new_col_name
}
# Drop variables ending with "_terceiro"
df_mayors <- df_mayors %>%
dplyr::select(-ends_with("_terceiro"))
# renaming variable
df_mayors <- df_mayors %>%
dplyr::rename(dif_votos = dif_votos_naoeleito)
# droping variables
df_mayors <- df_mayors %>%
dplyr::select(-use_third, -n_stem_background)
# changing data type
df_mayors$stem_background_eleito <- as.factor(df_mayors$stem_background_eleito)
# droping municipalities where 1 and 2 were STEM and had no 3 candidate
df_mayors <- df_mayors %>%
dplyr::filter(!is.na(dif_votos))
# Baseline and NPI Data -----------------------------------------------------------
df_health <- readRDS(paste0(baseline_data_dir, "/health_data.Rds"))
df_ideology <- readRDS(paste0(baseline_data_dir, "/ideology_data.Rds"))
df_ideology <- df_ideology %>%
dplyr::filter(coorte == 2016 | coorte == 2020) # keeping election coorte years
df_density <- readRDS(paste0(baseline_data_dir, "/density_data.Rds"))
df_political <- readRDS(paste0(baseline_data_dir, "/political_data.Rds"))
df_npi <- readRDS(paste0(baseline_data_dir, "/npi_data.Rds"))
# Covid Data --------------------------------------------------------------
df_covid <- readRDS(paste0(covid_data_dir, "/covid_data.Rds"))
df_covid <- df_covid %>%
dplyr::ungroup()
# Merging datasets --------------------------------------------------------
df <- left_join(df_mayors, df_npi, by = c("id_municipio")) # 29% of municipalities with missing data. That is expected since not everyone responded the survey
df <- left_join(df, df_covid, by = c("id_municipio", "coorte")) # 4 municipalities with missing data
df <- left_join(df, df_health, by = c("id_municipio"))
df <- left_join(df, df_density, by = c("id_municipio")) # 2 municipalities with missing data
df <- left_join(df, df_ideology, by = c("id_municipio", "coorte"))
df <- df %>%
dplyr::rename(sigla_partido = sigla_partido_eleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
df <- df %>%
dplyr::rename(sigla_partido_eleito = sigla_partido,
ideology_party_eleito = ideology_party)
df <- df %>%
dplyr::rename(sigla_partido = sigla_partido_naoeleito)
df <- left_join(df, df_political, by = c("sigla_partido", "coorte"))
df <- df %>%
dplyr::rename(sigla_partido_naoeleito = sigla_partido,
ideology_party_naoeleito = ideology_party)
df$coorte <- as.factor(df$coorte)
rm(df_covid, df_density, df_health, df_ideology, df_mayors, df_npi, df_political) # removing dataset
### Creating "variable" of non_stem_candidate
df$he_non_stem_cdt = ifelse(df$stem_background_eleito == 1 & str_detect(df$instrucao_naoeleito, "ensino superior completo"), 1, 0)
df$he_non_stem_cdt = ifelse(df$stem_background_naoeleito == 1 & str_detect(df$instrucao_eleito, "ensino superior completo"), 1, df$he_non_stem_cdt)
df$sch_non_stem_cdt <- as.logical(df$he_non_stem_cdt)
### Dropping non-elected variables
# Drop variables ending with "_terceiro"
df <- df %>%
select(-ends_with("_naoeleito"))
# Changing variable names
# Get a list of variable names ending with "_eleito"
eleito_columns <- colnames(df)[endsWith(colnames(df), "_eleito")]
# Iterate through the "_eleito" columns and remove the suffix
for (col_name in eleito_columns) {
new_col_name <- sub("_eleito", "", col_name)
colnames(df)[colnames(df) == col_name] <- new_col_name
}
# Droping municipalties with null outcome variables
df <- df %>%
filter(!is.na(hosp_per_100k_inhabitants) | !is.na(deaths_sivep_per_100k_inhabitants))
# Creating running variable
df$dif_votos = ifelse(df$stem_background == 1, df$dif_votos, -df$dif_votos)
# Creating candidate level variables
df <- df %>%
dplyr::mutate(reeleito = ocupacao == "prefeito")
df <- df %>%
dplyr::mutate(mulher = genero == "feminino")
df$ens_sup = as.logical(ifelse(str_detect(df$instrucao, "ensino superior completo"),1,0))
#### creating agregated occupation code 'cbo'
df <- df %>%
dplyr::mutate(cbo_agregado_nome = dplyr::recode(cbo_agregado,
"1223" = "Directors of works operations in construction",
"1425" = "IT managers",
"2124" = "IT analysts",
"2142" = "Civil engineers",
"2143" = "Electrical engineers",
"2221" = "Agroforestry engineers",
"2344" = "Uni. prof. of biological sciences",
"3171" = "Systems and application technicias",
"3172" = "Computer technicians",
"2341" = "Uni. prof. of math, statistics and TI",
.default = "Others"))
## Creating variables X e Y E T
df$X = df$dif_votos
df$Y_deaths = df$deaths_per_100k_inhabitants
df$Y_deaths_sivep = df$deaths_sivep_per_100k_inhabitants
df$Y_cases = df$confirmed_per_100k_inhabitants
df$Y_hosp = df$hosp_per_100k_inhabitants
# Cleaning the data -------------------------------------------------------
#df<- df %>%
#  filter(coorte == 2016 & sch_non_stem_cdt == 1)
df <- df %>%
dplyr::summarise(coorte,
sigla_uf,
id_municipio,
instrucao,
ocupacao,
curso_stem,
cbo_2002,
cbo_agregado,
cbo_agregado_nome,
stem_background,
#medico,
tenure,
sigla_partido,
idade,
genero,
populacao,
densidade,
#taxa_analfabetismo_18_mais,
#indice_gini,
idhm,
renda_pc,
per_populacao_urbana,
per_populacao_homens,
tx_med_ch,
tx_med,
tx_enf_ch,
tx_enf,
pct_desp_recp_saude_mun,
cob_esf,
tx_leito_sus,
ideology_party,
ideology_municipality,
reeleito,
mulher,
ens_sup,
sch_non_stem_cdt,
X,
Y_deaths_sivep,
Y_hosp,
barreiras_sanitarias,
mascaras,
restricao_atv_nao_essenciais,
restricao_circulacao,
restricao_transporte_publico,
total_nfi)
df <- df %>%
dplyr::mutate(instrucao = dplyr::recode(instrucao,
"ensino superior completo" = 7,
"ensino superior incompleto" = 6,
"ensino medio completo" = 5,
"ensino medio incompleto" = 4,
"ensino fundamental completo" = 3,
"ensino fundamental incompleto" = 2,
"le e escreve" = 1))
# Defining the sample --------------------------------------------------------------
## For now I'm onlu comparing municipalities whose
### STEM and Non-STEM candidates had a college degree
df <- df %>%
dplyr::filter(coorte == 2016 & sch_non_stem_cdt == 1)
# Saving ------------------------------------------------------------------
saveRDS(df, file = paste(work_dir, "/output/data/rdd_data_main.rds", sep = ""))
# Program - This program run main RDD regressions, including robustness, tables and pictures
# TO DO -------------------------------------------------------------------
# - Baixar outras variaveis demograficas do IEPS DATA
# - Tentar melhorar resultados de hospitalizações, talvez no ML
# Initial commands
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
# Libraries ***************************************************** ---------------------------------------------------------------
library("stargazer")
library("gt")
library("modelsummary")
library("rdrobust")
library("rddtools")
library("readr")
library("stringr")
library("tidyverse")
library("plyr")
library("sf")
library("rio")
library('patchwork')
theme_set(theme_minimal(base_size = 16))
# Setting -----------------------------------------------------------------
work_dir                       = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/regressions_main"
output_dir                     = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/regressions_main/output"
create_dataset_for_regressions = "C:/Users/gabri/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/output"
# Oppening Covid and RDD Data ----------------------------------------------------
df <- readRDS(paste(create_dataset_for_regressions, "/data/rdd_data_main.rds", sep = ""))
# Creating functions -----------------------------------
## table of results
tidy.rdrobust <- function(model, ...) {
ret <- data.frame(
term = row.names(model$coef),
estimate = model$coef[1, 1],
std.error = model$se[3, 1],
p.value = model$pv[, 1],
conf.low = model$ci[3,1],
conf.high = model$ci[3,2])
row.names(ret) <- NULL
ret
}
glance.rdrobust <- function(model, ...) {
ret <- data.frame(
"Eff number obs." = as.character(model$N_h[1] + model$N_h[2]),
"Bandwidth" = as.character(round(model$bws[1,1] * 100, 2)),
"State FE" = "PREENCHER",
"Election FE" = "PREENCHER",
"Gender" = "PREENCHER"
)
ret
}
## table of robustness
robust_check <- function(outcome, poli, covsZ, k) {
df_robs <- data.frame()
for (i in seq(0.02, 0.2, by = 0.01)) {
prov = rdrobust(y = outcome, df$X, p = poli, level = 90, kernel = k, h = i, covs = covsZ) #rodando rdd
df_robs = rbind(df_robs, c(i, prov[["coef"]][1], prov[["coef"]][3], prov[["ci"]][3,1], prov[["ci"]][3,2], prov[["ci"]][1,1], prov[["ci"]][1,2], prov[["z"]][3], prov[["N_h"]][1] + prov[["N_h"]][2])) #salvando colunas
}
colnames(df_robs) <- c("bw", "coef_conv", "coef_robs", "ci_lower_rob", "ci_higher_rob",  "ci_lower_conv", "ci_higher_conv", "z", "eff_n")
return(df_robs)
}
# Creating state dummies for fixed effects --------------------------------
state.f = factor(df$sigla_uf)
state.d = model.matrix(~state.f+0)
#year.f = factor(df$coorte)
#year.d = model.matrix(~year.f+0)
# Defining regressions' parameters
#amostra <- cbind(df$coorte == 2016, df$sch_non_stem_cdt == 1, df$ens_sup == 1)
# Main Results -------------------------------------------------------------
# baseline
amostra = cbind()
covsZ = cbind(state.d)
poli = 1
#janela = cbind()
janela = 0.03
k = "triangular"
#rdrobust(df$taxa_analfabetismo_18_mais, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
#taxa_analfabetismo_18_mais <- rdrobust(df$taxa_analfabetismo_18_mais, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
#indice_gini <- rdrobust(df$indice_gini,  df$X, p = poli, kernel = k, h = janela, subset = amostra, covs = covsZ)
renda_pc <- rdrobust(df$renda_pc,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
populacao <- rdrobust(log(df$populacao),  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
idhm <- rdrobust(df$idhm,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
densidade <- rdrobust(log(df$densidade),  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
per_populacao_homens <- rdrobust(df$per_populacao_homens,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
pct_desp_recp_saude_mun <- rdrobust(df$pct_desp_recp_saude_mun,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
tx_med_ch <- rdrobust(df$tx_med_ch, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
cob_esf <- rdrobust(df$cob_esf,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
tx_leito_sus <- rdrobust(df$tx_leito_sus, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
ideology_municipality <- rdrobust(df$ideology_municipality, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
models <- list(
# "Gini" = indice_gini,
"PC income" = renda_pc,
"Ln Populacao" = populacao,
#"Illiteracy" = taxa_analfabetismo_18_mais,
"HDI" = idhm,
"Ln Density" = densidade,
"% Masc. Pop" = per_populacao_homens,
"% Health municipal spending" = pct_desp_recp_saude_mun,
"Doctors per 1k pop." = tx_med_ch,
"Community health agents program " = cob_esf,
"Hosp. beds per 100k pop." = tx_leito_sus,
"Mun. ideology index" = ideology_municipality)
baseline_table <- modelsummary(models,
estimate = "{estimate}",
statistic = c("[{std.error}]","{p.value}{stars}"
),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*'=.1, '**'=.05, '***'=.01),
fmt = 2, # decimal places
#output = "Dados/output/bigsample_baseline.tex",
output = "gt",
title = "Baseline Characteristis - RD estimates",
coef_omit = "Corrected|Conventional")%>%
tab_spanner(label = "Demography", columns = 2:6) %>%
tab_spanner(label = "Health", columns = 7:10) %>%
tab_spanner(label = "Ideology", columns = 11)
baseline_table
amostra = cbind()
covsZ = cbind(state.d)
poli = 1
#janela = cbind()
janela = cbind()
k = "triangular"
#rdrobust(df$taxa_analfabetismo_18_mais, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
#taxa_analfabetismo_18_mais <- rdrobust(df$taxa_analfabetismo_18_mais, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
#indice_gini <- rdrobust(df$indice_gini,  df$X, p = poli, kernel = k, h = janela, subset = amostra, covs = covsZ)
renda_pc <- rdrobust(df$renda_pc,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
populacao <- rdrobust(log(df$populacao),  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
idhm <- rdrobust(df$idhm,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
densidade <- rdrobust(log(df$densidade),  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
per_populacao_homens <- rdrobust(df$per_populacao_homens,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
pct_desp_recp_saude_mun <- rdrobust(df$pct_desp_recp_saude_mun,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
tx_med_ch <- rdrobust(df$tx_med_ch, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
cob_esf <- rdrobust(df$cob_esf,  df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
tx_leito_sus <- rdrobust(df$tx_leito_sus, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
ideology_municipality <- rdrobust(df$ideology_municipality, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd", subset = amostra, covs = covsZ)
models <- list(
# "Gini" = indice_gini,
"PC income" = renda_pc,
"Ln Populacao" = populacao,
#"Illiteracy" = taxa_analfabetismo_18_mais,
"HDI" = idhm,
"Ln Density" = densidade,
"% Masc. Pop" = per_populacao_homens,
"% Health municipal spending" = pct_desp_recp_saude_mun,
"Doctors per 1k pop." = tx_med_ch,
"Community health agents program " = cob_esf,
"Hosp. beds per 100k pop." = tx_leito_sus,
"Mun. ideology index" = ideology_municipality)
baseline_table <- modelsummary(models,
estimate = "{estimate}",
statistic = c("[{std.error}]","{p.value}{stars}"
),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*'=.1, '**'=.05, '***'=.01),
fmt = 2, # decimal places
#output = "Dados/output/bigsample_baseline.tex",
output = "gt",
title = "Baseline Characteristis - RD estimates",
coef_omit = "Corrected|Conventional")%>%
tab_spanner(label = "Demography", columns = 2:6) %>%
tab_spanner(label = "Health", columns = 7:10) %>%
tab_spanner(label = "Ideology", columns = 11)
baseline_table
covsZ = cbind(state.d)
poli = 1
janela = cbind()
r2 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd", subset = amostra, covs = covsZ)
r3 = rdrobust(df$Y_deaths_sivep, df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd",  subset = amostra, covs = covsZ)
covsZ = cbind(state.d)
poli = 2
janela = cbind()
r4 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k,  h = janela,  subset = amostra, covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, h = janela,    p = poli,  subset = amostra, covs = covsZ)
covsZ = cbind(state.d)
poli = 1
janela = 0.05
r6 = rdrobust(df$Y_hosp, df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd", subset = amostra, covs = covsZ)
r7 = rdrobust(df$Y_deaths_sivep,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  subset = amostra, covs = covsZ)
covsZ = cbind(state.d)
poli = 2
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd", subset = amostra, covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,  subset = amostra, covs = covsZ)
models <- list("Panel A: Deaths" = list(r7,
r9,
r3,
r5),
"Panel B: Hospitalizations" = list(r6,
r8,
r2,
r4)
)
teste <- modelsummary(models,
shape = "rbind",
estimate = "{estimate}",
statistic = c("[{std.error}]","{p.value}{stars}"
),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*'=.1, '**'=.05, '***'=.01),
fmt = 2, # decimal places
#output = paste(output_dir, "/bigsample_estimates.tex", sep = ""),
output = "gt",
title = "Impact of STEM Leadership on Epidemiological Outcomes — RD estimates",
coef_omit = "Corrected|Conventional")
teste
covsZ = cbind(state.d)
janela = cbind()
poli = 1
mulher <- rdrobust(df$mulher, h = janela, df$X, p = poli, kernel = k,  subset = amostra, covs = covsZ)
reeleito <- rdrobust(df$reeleito, h = janela, df$X, p = poli, kernel = k,  subset = amostra, covs = covsZ)
idade <- rdrobust(df$idade, h = janela, df$X, p = poli, kernel = k, subset = amostra, covs = covsZ)
#ens.sup <- rdrobust(df$instrucao, h = janela, df$X, p = poli, kernel = k, subset = amostra, covs = covsZ)
ideology <- rdrobust(df$ideology_party, h = janela, df$X, p = poli, kernel = k, subset = amostra, covs = covsZ)
models <- list(
"Women" = mulher,
"Incumbent" = reeleito,
"Age" = idade,
#"Education" = ens.sup,
"Mayors' party ideology" = ideology)
teste_chr <- modelsummary(models,
estimate = "{estimate}",
statistic = c("[{std.error}]","{p.value}{stars}"
),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*'=.1, '**'=.05, '***'=.01),
fmt = 2, # decimal places
#output = "Dados/output/221103_bigsample_personal_charac.tex",
output = "gt",
title = "STEM candidates' personal characteristics — RD estimates",
coef_omit = "Corrected|Conventional")
teste_chr
# estimates
covsZ = cbind(state.d)
poli = 1
janela = cbind()
r2 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd", subset = amostra, covs = covsZ)
r3 = rdrobust(df$Y_deaths_sivep, df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd",  subset = amostra, covs = covsZ)
covsZ = cbind(state.d, df$idade, df$ideology_party)
poli = 1
janela = cbind()
r4 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k,  h = janela,  subset = amostra, covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, h = janela,    p = poli,  subset = amostra, covs = covsZ)
covsZ = cbind(state.d)
poli = 1
janela = 0.05
r6 = rdrobust(df$Y_hosp, df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd", subset = amostra, covs = covsZ)
r7 = rdrobust(df$Y_deaths_sivep,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  subset = amostra, covs = covsZ)
covsZ = cbind(state.d, df$idade, df$ideology_party)
poli = 1
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd", subset = amostra, covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,  subset = amostra, covs = covsZ)
models <- list("Panel A: Deaths" = list(r7,
r9,
r3,
r5),
"Panel B: Hospitalizations" = list(r6,
r8,
r2,
r4)
)
teste <- modelsummary(models,
shape = "rbind",
estimate = "{estimate}",
statistic = c("[{std.error}]","{p.value}{stars}"
),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*'=.1, '**'=.05, '***'=.01),
fmt = 2, # decimal places
#output = paste(output_dir, "/bigsample_estimates.tex", sep = ""),
output = "gt",
title = "Impact of STEM Leadership on Epidemiological Outcomes — RD estimates",
coef_omit = "Corrected|Conventional")
teste
covsZ = cbind(state.d, df$idade, df$ideology_party)
poli = 1
janela = cbind()
r4 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k,  h = janela,  subset = amostra, covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, h = janela,    p = poli,  subset = amostra, covs = covsZ)
covsZ = cbind(state.d)
poli = 1
janela = cbind()
r2 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd", subset = amostra, covs = covsZ)
r3 = rdrobust(df$Y_deaths_sivep, df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd",  subset = amostra, covs = covsZ)
covsZ = cbind(state.d, df$idade, df$ideology_party)
poli = 1
janela = cbind()
r4 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k,  h = janela,  subset = amostra, covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, h = janela,    p = poli,  subset = amostra, covs = covsZ)
covsZ = cbind(state.d)
poli = 1
janela = 0.05
r6 = rdrobust(df$Y_hosp, df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd", subset = amostra, covs = covsZ)
r7 = rdrobust(df$Y_deaths_sivep,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  subset = amostra, covs = covsZ)
covsZ = cbind(state.d, df$idade, df$ideology_party)
poli = 1
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd", subset = amostra, covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,  subset = amostra, covs = covsZ)
models <- list("Panel A: Deaths" = list(r7,
r9,
r3,
r5),
"Panel B: Hospitalizations" = list(r6,
r8,
r2,
r4)
)
teste <- modelsummary(models,
shape = "rbind",
estimate = "{estimate}",
statistic = c("[{std.error}]","{p.value}{stars}"
),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*'=.1, '**'=.05, '***'=.01),
fmt = 2, # decimal places
#output = paste(output_dir, "/bigsample_estimates.tex", sep = ""),
output = "gt",
title = "Impact of STEM Leadership on Epidemiological Outcomes — RD estimates",
coef_omit = "Corrected|Conventional")
teste
