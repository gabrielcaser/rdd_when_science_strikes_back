out2,
out1,
out3,
type = "latex",
covariate.labels = c("STEM Background", "Tenure Moderation Effect", "Woman"),
dep.var.labels = c("Hospitalizations", "Deaths", "NFI"),
#out = paste(output_dir, "/tables/moderation_tenure.tex", sep = ""),
title = "Moderating effects of scientific intensity on the impact of STEM background",
omit = c("X", "T_X"),
notes = NULL
)
moderation_tenure <- stargazer::stargazer(
out2,
out1,
out3,
type = "latex",
covariate.labels = c("STEM Background", "Tenure Moderation Effect", "Woman"),
dep.var.labels = c("Hospitalizations", "Deaths", "NFI"),
out = paste(output_dir, "/tables/moderation_tenure.tex", sep = ""),
title = "Moderating effects of scientific intensity on the impact of STEM background",
omit = c("X", "T_X"),
notes = NULL
)
writeLines(moderation_tenure, con = "outputs/tables/moderation_tenure.tex")
moderation_tenure <- stargazer::stargazer(
out2,
out1,
out3,
type = "latex",
covariate.labels = c("STEM Background", "Tenure Moderation Effect", "Woman"),
dep.var.labels = c("Hospitalizations", "Deaths", "NFI"),
out = paste(output_dir, "/tables/moderation_tenure.tex", sep = ""),
title = "Moderating effects of scientific intensity on the impact of STEM background",
omit = c("X", "T_X"),
notes = NULL
)
writeLines(moderation_tenure, con = "outputs/tables/moderation_tenure.md")
out4 <- plm(
Y_hosp ~ X + T + T_X + receita_2015 + inter_receita_stem  + mulher ,
data = pdata,
index = c("sigla_uf"),
model = "within"
)
out5 <- plm(
Y_deaths_sivep ~ X + T + T_X + receita_2015  + inter_receita_stem + mulher,
data = pdata,
index = c("sigla_uf"),
model = "within"
)
out6 <- plm(
total_nfi ~ X + T + T_X + receita_2015 + inter_receita_stem + mulher,
data = pdata,
index = c("sigla_uf"),
model = "within"
)
moderation_revenue <- stargazer::stargazer(
out5,
out4,
out6,
type = "latex",
covariate.labels = c(
"STEM Background",
"2015 Revenue",
"Revenue Modereration Effect",
"Woman"
),
dep.var.labels = c("Hospitalizations", "Deaths", "NFI"),
title = "Moderating effects of citiesâ€™ development on the impact of STEM background",
out = paste(output_dir, "/tables/moderation_revenue.tex", sep = ""),
omit = c("X", "T_X"),
notes = NULL
)
writeLines(moderation_revenue, con = "outputs/tables/moderation_revenue.md")
# Test reading the second file
text <- readLines("outputs/tables/moderation_tenure.md")
# Test outputting LaTeX
knitr::asis_output(paste(text, collapse = "\n"))
# Test reading the second file
text <- readLines("outputs/tables/moderation_revenue.md")
# Test outputting LaTeX
knitr::asis_output(paste(text, collapse = "\n"))
# Description - This code reproduces all tables and figures from the paper
# TO DO
## Run sum stats
# Initial Commands --------------------------------------------------------
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
set.seed(1234)
# Downloads required libraries --------------------------------------------
renv::restore()
# Libraries ---------------------------------------------------------------
library("tidyverse")    # to handle data
library("estimatr")
library("modelsummary") # to create tables
library("gt")           # better tables
library('geobr')        # to create maps
library('skimr')        # to create sumstats
library('rdrobust')     # to run rdd
library('patchwork')    # to create figures with plots together
library('knitr')        # render presentations
library('forcats')      # better figures
library('plm')          # regressions with fixed effects
# Setting -----------------------------------------------------------------
output_dir                     = paste0(getwd(),"/outputs")
data_dir                       = paste0(getwd(),"/data")
mayors_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
baseline_data_dir              = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir                 = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
tenure_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/input"
# Parameters --------------------------------------------------------------
stem_definition        = "broad" # "broad" or "strict"
non_stem_college       = "all"   # "college_mayors_only" OR "all"
cohort_filter          = "2016_" # "only_2016_" or ""
data   = paste0("rdd_data_", non_stem_college,"_", cohort_filter, stem_definition, "_definition.Rds") # Machado's STEM classification, both 2016 and 2020 cohorts and only considering municipalities where de NON-STEM mayor had college education
poli   = 1                      # Functional form
janela = 0.10                   # Defining margin of victory for robustness tests
k      = "triangular"           # Kernel
#covariates = # definir
# Running scripts ---------------------------------------------------------
#source("code/01_create_dataset.R")
#source("code/02_sum_stats.R")
source("code/03_regressions_main.R")
#source("code/01_create_dataset.R")
#source("code/02_sum_stats.R")
source("code/03_regressions_main.R")
df <- readRDS(paste(data_dir, "/final/", data, sep = ""))
# Description - This code reproduces all tables and figures from the paper
# TO DO
## Run sum stats
# Initial Commands --------------------------------------------------------
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
set.seed(1234)
# Downloads required libraries --------------------------------------------
renv::restore()
# Libraries ---------------------------------------------------------------
library("tidyverse")    # to handle data
library("estimatr")
library("modelsummary") # to create tables
library("gt")           # better tables
library('geobr')        # to create maps
library('skimr')        # to create sumstats
library('rdrobust')     # to run rdd
library('patchwork')    # to create figures with plots together
library('knitr')        # render presentations
library('forcats')      # better figures
library('plm')          # regressions with fixed effects
# Setting -----------------------------------------------------------------
output_dir                     = paste0(getwd(),"/outputs")
data_dir                       = paste0(getwd(),"/data")
mayors_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
baseline_data_dir              = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir                 = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
tenure_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/input"
# Parameters --------------------------------------------------------------
stem_definition        = "broad" # "broad" or "strict"
non_stem_college       = "all"   # "college_mayors_only" OR "all"
cohort_filter          = "2016_" # "only_2016_" or ""
data   = paste0("rdd_data_", non_stem_college,"_", cohort_filter, stem_definition, "_definition.Rds") # Machado's STEM classification, both 2016 and 2020 cohorts and only considering municipalities where de NON-STEM mayor had college education
poli   = 1                      # Functional form
janela = 0.10                   # Defining margin of victory for robustness tests
k      = "triangular"           # Kernel
#covariates = # definir
# Running scripts ---------------------------------------------------------
source("code/01_create_dataset.R")
#source("code/02_sum_stats.R")
source("code/03_regressions_main.R")
source("code/04_regressions_moderation.R")
df <- readRDS(paste(data_dir, "/final/", data, sep = ""))
tidy.rdrobust <- function(model, ...) {
ret <- data.frame(
term = row.names(model$coef),
estimate = model$coef[1, 1],
std.error = model$se[3, 1],
p.value = model$pv[, 1],
conf.low = model$ci[3,1],
conf.high = model$ci[3,2])
row.names(ret) <- NULL
ret
}
glance.rdrobust <- function(model, ...) {
ret <- data.frame(
"Eff N obs." = as.character(model$N_h[1] + model$N_h[2]),
"Bandwidth" = as.character(round(model$bws[1,1] * 100, 2))#,
#"State FE" = "X",
#"Election FE" = "X",
#"Gender" = ifelse("mulher" %in% colnames(as.data.frame(covsZ)),"X"," ")
)
ret
}
df <- readRDS(paste(data_dir, "/final/", data, sep = ""))
data_revenue <- readxl::read_excel(paste(data_dir,"/raw/ipea_receitas_municipais.xlsx", sep = ""), sheet = "Receitas Totais")
data_revenue <- data_revenue %>%
summarise(id_municipio = Cod.IBGE,
receita_2015 = `2015` / 10000000)
df <- merge(df, data_revenue, by = "id_municipio")
rm(data_revenue)
df$tenure <- df$tenure / 12
df_subset <- subset(df, X >= -1 * janela & X <= janela)
df_subset$inter_receita_stem <- df_subset$receita_2015 * (as.double(df_subset$stem_background) - 1)
df_subset$log_tenure <- log(df_subset$tenure + 1)
df_subset$inter_tenure_stem <- df_subset$tenure  * (as.double(df_subset$stem_background) - 1)
df_subset$inter_ideo_stem <- df_subset$ideology_party * (as.double(df_subset$stem_background) - 1)
df_subset$inter_X_stem <- df_subset$X * (as.double(df_subset$stem_background) - 1)
# FE
pdata <- pdata.frame(df_subset, c("sigla_uf"))
# Final table
out1 <- plm(
Y_hosp ~ X + T + T_X + inter_tenure_stem + tenure + mulher,
data = pdata,
index = c("sigla_uf"),
model = "within" ,
effect = "twoways"
)
janela
# Description - This code reproduces all tables and figures from the paper
# TO DO
## Run sum stats
# Initial Commands --------------------------------------------------------
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
set.seed(1234)
# Downloads required libraries --------------------------------------------
renv::restore()
# Libraries ---------------------------------------------------------------
library("tidyverse")    # to handle data
library("estimatr")
library("modelsummary") # to create tables
library("gt")           # better tables
library('geobr')        # to create maps
library('skimr')        # to create sumstats
library('rdrobust')     # to run rdd
library('patchwork')    # to create figures with plots together
library('knitr')        # render presentations
library('forcats')      # better figures
library('plm')          # regressions with fixed effects
# Setting -----------------------------------------------------------------
output_dir                     = paste0(getwd(),"/outputs")
data_dir                       = paste0(getwd(),"/data")
mayors_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
baseline_data_dir              = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir                 = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
tenure_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/input"
# Parameters --------------------------------------------------------------
stem_definition        = "broad" # "broad" or "strict"
non_stem_college       = "all"   # "college_mayors_only" OR "all"
cohort_filter          = "2016_" # "only_2016_" or ""
data   = paste0("rdd_data_", non_stem_college,"_", cohort_filter, stem_definition, "_definition.Rds") # Machado's STEM classification, both 2016 and 2020 cohorts and only considering municipalities where de NON-STEM mayor had college education
poli   = 1                      # Functional form
janela = 0.10                   # Defining margin of victory for robustness tests
k      = "triangular"           # Kernel
#covariates = # definir
# Running scripts ---------------------------------------------------------
source("code/01_create_dataset.R")
#source("code/02_sum_stats.R")
source("code/03_regressions_main.R")
source("code/04_regressions_moderation.R")
#system("quarto render tables_and_figures.qmd")
# Description - This code reproduces all tables and figures from the paper
# TO DO
## Moderation - Add cohort fixed effects
## Versions - Create a pdf for each data
# Initial Commands --------------------------------------------------------
rm(list = ls(all.names = TRUE)) # clear objects
gc() # free up memory
set.seed(1234)
# Downloads required libraries --------------------------------------------
renv::restore()
# Libraries ---------------------------------------------------------------
library("tidyverse")    # to handle data
library("estimatr")
library("modelsummary") # to create tables
library("gt")           # better tables
library('geobr')        # to create maps
library('skimr')        # to create sumstats
library('rdrobust')     # to run rdd
library('patchwork')    # to create figures with plots together
library('knitr')        # render presentations
library('forcats')      # better figures
library('plm')          # regressions with fixed effects
# Setting -----------------------------------------------------------------
output_dir                     = paste0(getwd(),"/outputs")
data_dir                       = paste0(getwd(),"/data")
mayors_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/3_create_education_data/output/data"
baseline_data_dir              = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/5_create_baseline_data/output/data"
covid_data_dir                 = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/4_create_covid_data/output/data"
tenure_data_dir                = "C:/Users/wb633398/OneDrive/Gabriel/Insper/Tese/Engenheiros/replication_code/rdd_when_science_strikes_back/6_create_rdd_dataset/input"
# Parameters --------------------------------------------------------------
stem_definition        = "broad" # "broad" or "strict"
non_stem_college       = "all"   # "college_mayors_only" OR "all"
cohort_filter          = "" # "only_2016_" or ""
data   = paste0("rdd_data_", non_stem_college,"_", cohort_filter, stem_definition, "_definition.Rds") # Machado's STEM classification, both 2016 and 2020 cohorts and only considering municipalities where de NON-STEM mayor had college education
poli   = 1                      # Functional form
janela = 0.10                   # Defining margin of victory for robustness tests
k      = "triangular"           # Kernel
# Program - This program run main RDD regressions, including robustness, tables and pictures
# Oppening ----------------------------------------------------------------
df <- readRDS(paste(data_dir, "/final/", data, sep = ""))
# Creating functions -----------------------------------
## table of results
tidy.rdrobust <- function(model, ...) {
ret <- data.frame(
term = row.names(model$coef),
estimate = model$coef[1, 1],
std.error = model$se[3, 1],
p.value = model$pv[, 1],
conf.low = model$ci[3,1],
conf.high = model$ci[3,2])
row.names(ret) <- NULL
ret
}
glance.rdrobust <- function(model, ...) {
ret <- data.frame(
"Eff N obs." = as.character(model$N_h[1] + model$N_h[2]),
"Bandwidth" = as.character(round(model$bws[1,1] * 100, 2))#,
#"State FE" = "X",
#"Election FE" = "X",
#"Gender" = ifelse("mulher" %in% colnames(as.data.frame(covsZ)),"X"," ")
)
ret
}
## table of robustness
robust_check <- function(outcome, poli, covsZ, k, x_value) {
df_robs <- data.frame()
for (i in seq(0.02, 0.2, by = 0.01)) {
prov = rdrobust(y = outcome, x_value, p = poli, level = 90, kernel = k, h = i, covs = covsZ) #rodando rdd
df_robs = rbind(df_robs, c(i, prov[["coef"]][1], prov[["coef"]][3], prov[["ci"]][3,1], prov[["ci"]][3,2], prov[["ci"]][1,1], prov[["ci"]][1,2], prov[["z"]][3], prov[["N_h"]][1] + prov[["N_h"]][2])) #salvando colunas
}
colnames(df_robs) <- c("bw", "coef_conv", "coef_robs", "ci_lower_rob", "ci_higher_rob",  "ci_lower_conv", "ci_higher_conv", "z", "eff_n")
return(df_robs)
}
# Creating state dummies for fixed effects --------------------------------
# Defining regressions' parameters
state.f = factor(df$sigla_uf)
state.d = model.matrix(~state.f+0)
year.f = factor(df$coorte)
if (cohort_filter == "") {
year.d = model.matrix(~year.f+0)
}
if (cohort_filter == "2016_") {
year.d = 1
}
# Main Results -------------------------------------------------------------
# baseline
covsZ = cbind(state.d, year.d)
#rdrobust(df$taxa_analfabetismo_18_mais, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd",  covs = covsZ)
#taxa_analfabetismo_18_mais <- rdrobust(df$taxa_analfabetismo_18_mais, df$X, p = poli, kernel = k, h = janela, bwselect = "mserd",  covs = covsZ)
#indice_gini <- rdrobust(df$indice_gini,  df$X, p = poli, kernel = k, h = janela,  covs = covsZ)
renda_pc                <- rdrobust(df$renda_pc,  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
populacao               <- rdrobust(log(df$populacao),  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
idhm                    <- rdrobust(df$idhm,  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
densidade               <- rdrobust(df$densidade,  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
per_populacao_homens    <- rdrobust(df$per_populacao_homens,  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
pct_desp_recp_saude_mun <- rdrobust(df$pct_desp_recp_saude_mun,  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
tx_med_ch               <- rdrobust(df$tx_med_ch, df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
cob_esf                 <- rdrobust(df$cob_esf,  df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
tx_leito_sus            <- rdrobust(df$tx_leito_sus, df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
ideology_municipality   <- rdrobust(df$ideology_municipality, df$X, p = poli, kernel = k,  bwselect = "mserd",  covs = covsZ)
# Models for Panel 1 (Demography)
models_1 <- list(
"PC income" = renda_pc,
"Log Population" = populacao,
"HDI" = idhm,
"Density" = densidade,
"% Masc. Pop" = per_populacao_homens
)
# Models for Panel 2 (Health and Ideology)
models_2 <- list(
"% Health municipal spending" = pct_desp_recp_saude_mun,
"Doctors per 1k pop." = tx_med_ch,
"Community health agents program" = cob_esf,
"Hosp. beds per 100k pop." = tx_leito_sus,
"Mun. ideology index" = ideology_municipality
)
# Create the first table (Demography)
baseline_table_1 <- modelsummary(
models_1,
estimate = "{estimate}",
statistic = c("[{std.error}]", "{p.value}{stars}"),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = 2,
output = "outputs/tables/baseline_table_panel1.md",
title = "Baseline Characteristics - RD Estimates (Demography)",
coef_omit = "Corrected|Conventional"#,
#align = paste(rep("c", length(models_1) + 1), collapse = "")
)
# Create the second table (Health and Ideology)
baseline_table_2 <- modelsummary(
models_2,
estimate = "{estimate}",
statistic = c("[{std.error}]", "{p.value}{stars}"),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = 2,
output = "outputs/tables/baseline_table_panel2.md",
title = "Baseline Characteristics - RD Estimates (Health and Ideology)",
coef_omit = "Corrected|Conventional"#,
#align = paste(rep("c", length(models_2) + 1), collapse = "")
)
baseline_table_1
baseline_table_2
# estimates
covsZ = cbind(state.d, year.d)
r2 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k, bwselect = "mserd", covs = covsZ)
r3 = rdrobust(df$Y_deaths_sivep, df$X, p = poli, kernel = k, bwselect = "mserd", covs = covsZ)
summary(r2)
summary(r3)
summary(r2)
summary(r3)
covsZ = cbind(state.d, year.d, df$mulher, df$instrucao, df$ideology_party)
r4 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k,  covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
summary(r2)
summary(r3)
covsZ = cbind(state.d, year.d, df$mulher, df$instrucao, df$ideology_party)
r4 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k,  covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
covsZ = cbind(state.d, year.d, df$mulher, df$ideology_party)
r4 = rdrobust(df$Y_hosp,  df$X, p = poli, kernel = k,  covs = covsZ)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
r5 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
summary(r4)
summary(r5)
r5 = rdrobust(log(df$Y_deaths_sivep), df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
r5 = rdrobust(log(df$Y_deaths_sivep), df$X, kernel = k, p = poli, covs = covsZ)
r5 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
r4 = rdrobust(log(df$Y_hosp + 1),  df$X, p = poli, kernel = k,  covs = covsZ)
r5 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
r2 = rdrobust(log(df$Y_hosp + 1),  df$X, p = poli, kernel = k, bwselect = "mserd", covs = covsZ)
r3 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, p = poli, kernel = k, bwselect = "mserd", covs = covsZ)
summary(r2)
summary(r3)
covsZ = cbind(state.d, year.d)
r2 = rdrobust(log(df$Y_hosp + 1),  df$X, p = poli, kernel = k, bwselect = "mserd", covs = covsZ)
r3 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, p = poli, kernel = k, bwselect = "mserd", covs = covsZ)
summary(r2)
summary(r3)
covsZ = cbind(state.d, year.d, df$mulher, df$ideology_party, df$instrucao)
r4 = rdrobust(log(df$Y_hosp + 1),  df$X, p = poli, kernel = k,  covs = covsZ)
r5 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
r6 = rdrobust(log(df$Y_hosp + 1), df$X, p = poli, kernel = k,  h = janela,  bwselect = "mserd",  covs = covsZ)
r7 = rdrobust(log(df$Y_deaths_sivep + 1),  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",   covs = covsZ)
covsZ = cbind(state.d, year.d, df$mulher, df$instrucao, df$ideology_party)
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,   covs = covsZ)
models <- list("Panel A: Deaths" = list(r7,
r9,
r3,
r5),
"Panel B: Hospitalizations" = list(r6,
r8,
r2,
r4)
)
modelsummary(
models,
shape = "rbind",
estimate = "{estimate}",
statistic = c("[{std.error}]", "{p.value}{stars}"),
coef_rename = c("Robust" = "RD estimator"),
stars = c('*' = .1, '**' = .05, '***' = .01),
fmt = 2,
# decimal places
#output = paste(output_dir, "/bigsample_estimates.tex", sep = ""),
output = "outputs/tables/estimates.md",
title = "Impact of STEM Leadership on Epidemiological Outcomes â€” RD estimates",
coef_omit = "Corrected|Conventional"#,
#align = paste(rep("c", length(models) + 1), collapse = "")
)
summary(r8)
summary(r9)
janela = 0.05                   # Defining margin of victory for robustness tests
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,   covs = covsZ)
summary(r8)
summary(r9)
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,   covs = covsZ)
summary(r6)
summary(r7)
r8 = rdrobust(log(df$Y_hosp + 1) ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  covs = covsZ)
r9 = rdrobust(log(df$Y_deaths_sivep + 1),  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,   covs = covsZ)
summary(r8)
summary(r9)
covsZ = cbind(state.d, year.d, df$mulher, df$ideology_party, df$instrucao, df$reeleito)
r4 = rdrobust(log(df$Y_hosp + 1),  df$X, p = poli, kernel = k,  covs = covsZ)
r5 = rdrobust(log(df$Y_deaths_sivep + 1), df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
r5 = rdrobust(df$Y_deaths_sivep, df$X, kernel = k, p = poli, covs = covsZ)
summary(r4)
summary(r5)
covsZ = cbind(state.d, year.d, df$mulher, df$instrucao, df$ideology_party, df$reeleito)
r8 = rdrobust(df$Y_hosp ,  df$X, p = poli, kernel = k, h = janela,   bwselect = "mserd",  covs = covsZ)
r9 = rdrobust(df$Y_deaths_sivep,  df$X, kernel = k, h = janela,   bwselect = "mserd", p = poli,   covs = covsZ)
