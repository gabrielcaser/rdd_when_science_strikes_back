theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title.y = element_blank(),
axis.text.x =  element_blank()
) #+
#ylab("% of cities with a STEM candidate among top 2 voted ")
box2
ggsave(
filename = paste0(output_dir, "/figures/sumstats_boxplot.png"),
plot = box2,  # Replace with the actual ggplot object
height = 3.0,
width = 2.5,
dpi = 600
)
# Creating map  ---------------------------------------------------------
## states
#utils::remove.packages('geobr')
#devtools::install_github("ipeaGIT/geobr", subdir = "r-package")
dados_mapa <- read_state(year=2015, showProgress = FALSE, simplified = FALSE)
#dados_mapa <- readRDS("Dados/input/220811_geo_dados_estados_2019.rds")
sf2 <- states
#sf2 <- sf2 %>%
# rename(sigla_uf = state)
dados_mapa <- dados_mapa %>%
rename(sigla_uf = abbrev_state)
sf2 <- left_join(dados_mapa, sf2, by = c("sigla_uf"))
dim(df)
sf2$perc_stem = sf2$perc_stem * 100
sf2 %>%
#filter(sigla_uf != "AC") %>%
ggplot() +
geom_sf(aes(fill = perc_stem), alpha = 0.9, color = NA) +
labs(#title="Percentage of STEM mayors per state (2016)",
caption='Source: Author', size = 8) +
viridis::scale_fill_viridis(
direction = 1,
name="% of STEM mayors",
na.value = "white"
) +
theme_minimal(base_size = 16) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
ggsave(
filename = paste0(output_dir, "/figures/mapa_stem_estados.png"),
# plot = box2,  # Replace with the actual ggplot object
height = 5.0,
width = 10
)
## municipios
mun <- read_municipality(year=2015, showProgress = FALSE, simplified = FALSE)
#mun <- readRDS("Dados/input/220811_geo_dados_municipios_2019.rds")
mun <- mun %>%
rename(id_municipio = code_muni)
mun$id_municipio = substr(mun$id_municipio,1,6)
sf3 <- df %>%
filter(coorte == 2016)
sf3 <- left_join(mun, sf3, by = c("id_municipio"))
sf3 %>%
#filter(code_region == 3) %>%  # para ver o mapa inteiro é só tirar o code_region
# filter(sigla_uf != "AC") %>%
ggplot() +
geom_sf(data = subset(dados_mapa)) +
geom_sf(aes(fill = stem_background), alpha = .7, color = NA) +
labs(title="Municipalities where a STEM canditate was among the top 2 voted (2016)",
caption='Source: Author', size = 8) +
scale_fill_manual(values = c("red", "blue"),
name = "STEM candidate",
na.value = "grey90",
labels = c("Lost","Won", "Not in top 2")) +
theme_minimal(base_size = 16) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
ggsave(
filename = paste0(output_dir, "/figures/mapa_stem_municipios_2016.png"),
# plot = box2,  # Replace with the actual ggplot object
height = 5.0,
width = 10,
dpi = 600
)
#sf3 %>%
#  filter(code_state == 35) %>%  # para ver o mapa inteiro é só tirar o code_region
#  ggplot() +
#  geom_sf(data = subset(dados_mapa, code_state == 35)) +
#  geom_sf(aes(fill = stem_background), alpha = .7, color = NA) +
#  labs(#title="Municipalities where a STEM canditate was among the top 2 voted in SP (2016)",
#    caption='Source: Author', size = 8) +
#  scale_fill_manual(values = c("red", "blue"),
#                    name = "STEM candidate",
#                    na.value = "grey90",
#                    labels = c("Lost","Won", "Not in top 2")) +
#  theme_minimal(base_size = 16) +
#  theme(axis.title = element_blank(),
#        axis.text = element_blank(),
#        axis.ticks = element_blank(),
#        panel.grid = element_blank())
#
#ggsave(
#  filename = paste0(output_dir, "/figures/mapa_stem_SP.png"),
#  # plot = box2,  # Replace with the actual ggplot object
#  height = 5.5,
#  width = 7.5
#)
# Plots - Discontinuity  ----------------------------------------------
## outcomes
### running regressions
amostra <- cbind()
state.f = factor(df$sigla_uf)
state.d = model.matrix( ~ state.f + 0) # creating fixed effects
year.f = factor(df$coorte) # creating dummies
year.d = model.matrix( ~ year.f + 0)
covsZ  = cbind(state.d, year.d) # Controls
r4 = rdrobust(
df$Y_deaths_sivep,
df$X,
p      = poli,
kernel = k,
h      = janela,
subset = amostra,
#covs   = covsZ
)
r5 = rdrobust(
df$Y_hosp,
df$X,
kernel = k,
h      = janela,
p      = poli,
subset = amostra,
#covs   = covsZ
)
summary(r4)
summary(r5)
### hosp
df_plots <- df[abs(df$X) < r4$bws[1], ]
#poli = 1
#covsZ = cbind(state.d, df$mulher)
#covsZ = df$tenure
hosp <- rdplot(df_plots$Y_hosp, df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r4$bws[1] * -1, r4$bws[1]),
#y.lim = c(75, 175),
#shade = TRUE,
#subset = amostra,
#h = r4$bws[1],
#scale = 5,
#ci = 95,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(A) Impact of Treatment on Hospitalizations"
)
### deaths
death <- rdplot(df_plots$Y_deaths_sivep , df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r5$bws[1] * -1, r5$bws[1]),
y.lim = c(75, 175),
#shade = TRUE,
#h = r5$bws[1],
#scale = 5,
#ci = 90,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(B) Impact of Treatment on Deaths"#,
# col.lines = "white"
)
death <- death$rdplot
death <- death +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12))
death
hosp <- hosp$rdplot
hosp <- hosp +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12))
hosp
plots <- hosp / death
plots
ggsave(paste0(output_dir, "/figures/bigsample_plots_outcomes.png"), plot = plots,
width = 8.0,
height = 5,
units = "in")
ggplot(df[abs(df$X) <= 0.05, ], aes(x = X, y = Y_deaths_sivep)) +
geom_point()
ggplot(df[abs(df$X) <= 0.05, ], aes(x = X, y = Y_hosp)) +
geom_point()
sf3 %>%
#filter(code_region == 3) %>%  # para ver o mapa inteiro é só tirar o code_region
# filter(sigla_uf != "AC") %>%
ggplot() +
geom_sf(data = subset(dados_mapa)) +
geom_sf(aes(fill = stem_background), alpha = .7, color = NA) +
labs(#title="Municipalities where a STEM canditate was among the top 2 voted (2016)",
caption='Source: Author', size = 8) +
scale_fill_manual(values = c("red", "blue"),
name = "STEM candidate",
na.value = "grey90",
labels = c("Lost","Won", "Not in top 2")) +
theme_minimal(base_size = 16) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank())
ggsave(
filename = paste0(output_dir, "/figures/mapa_stem_municipios_2016.png"),
# plot = box2,  # Replace with the actual ggplot object
height = 5.0,
width = 10,
dpi = 600
)
#sf3 %>%
#  filter(code_state == 35) %>%  # para ver o mapa inteiro é só tirar o code_region
#  ggplot() +
#  geom_sf(data = subset(dados_mapa, code_state == 35)) +
#  geom_sf(aes(fill = stem_background), alpha = .7, color = NA) +
#  labs(#title="Municipalities where a STEM canditate was among the top 2 voted in SP (2016)",
#    caption='Source: Author', size = 8) +
#  scale_fill_manual(values = c("red", "blue"),
#                    name = "STEM candidate",
#                    na.value = "grey90",
#                    labels = c("Lost","Won", "Not in top 2")) +
#  theme_minimal(base_size = 16) +
#  theme(axis.title = element_blank(),
#        axis.text = element_blank(),
#        axis.ticks = element_blank(),
#        panel.grid = element_blank())
#
#ggsave(
#  filename = paste0(output_dir, "/figures/mapa_stem_SP.png"),
#  # plot = box2,  # Replace with the actual ggplot object
#  height = 5.5,
#  width = 7.5
#)
# Plots - Discontinuity  ----------------------------------------------
## outcomes
### running regressions
amostra <- cbind()
state.f = factor(df$sigla_uf)
state.d = model.matrix( ~ state.f + 0) # creating fixed effects
year.f = factor(df$coorte) # creating dummies
year.d = model.matrix( ~ year.f + 0)
covsZ  = cbind(state.d, year.d) # Controls
r4 = rdrobust(
df$Y_deaths_sivep,
df$X,
p      = poli,
kernel = k,
h      = janela,
subset = amostra,
#covs   = covsZ
)
r5 = rdrobust(
df$Y_hosp,
df$X,
kernel = k,
h      = janela,
p      = poli,
subset = amostra,
#covs   = covsZ
)
summary(r4)
summary(r5)
### hosp
df_plots <- df[abs(df$X) < r4$bws[1], ]
#poli = 1
#covsZ = cbind(state.d, df$mulher)
#covsZ = df$tenure
hosp <- rdplot(df_plots$Y_hosp, df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r4$bws[1] * -1, r4$bws[1]),
#y.lim = c(75, 175),
#shade = TRUE,
#subset = amostra,
#h = r4$bws[1],
#scale = 5,
#ci = 95,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(A) Impact of Treatment on Hospitalizations"
)
### deaths
death <- rdplot(df_plots$Y_deaths_sivep , df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r5$bws[1] * -1, r5$bws[1]),
y.lim = c(75, 175),
#shade = TRUE,
#h = r5$bws[1],
#scale = 5,
#ci = 90,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(B) Impact of Treatment on Deaths"#,
# col.lines = "white"
)
death <- death$rdplot
death <- death +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12))
death
hosp <- hosp$rdplot
hosp <- hosp +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12))
hosp
plots <- hosp / death
plots
ggsave(paste0(output_dir, "/figures/bigsample_plots_outcomes.png"), plot = plots,
width = 8.0,
height = 5,
units = "in")
ggplot(df[abs(df$X) <= 0.05, ], aes(x = X, y = Y_deaths_sivep)) +
geom_point()
ggplot(df[abs(df$X) <= 0.05, ], aes(x = X, y = Y_hosp)) +
geom_point()
death <- death$rdplot
death <- death +
theme_minimal(base_size = 15) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
death
hosp <- hosp$rdplot
hosp <- hosp +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
hosp
plots <- hosp / death
plots
ggsave(paste0(output_dir, "/figures/bigsample_plots_outcomes.png"), plot = plots,
width = 8.0,
height = 5,
units = "in")
death <- death$rdplot
death <- death +
theme_minimal(base_size = 15) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
death
death <- rdplot(df_plots$Y_deaths_sivep , df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r5$bws[1] * -1, r5$bws[1]),
y.lim = c(75, 175),
#shade = TRUE,
#h = r5$bws[1],
#scale = 5,
#ci = 90,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(B) Impact of Treatment on Deaths"#,
# col.lines = "white"
)
death <- death$rdplot
death <- death +
theme_minimal(base_size = 15) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
death
hosp <- hosp$rdplot
hosp <- hosp +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
hosp
hosp <- rdplot(df_plots$Y_hosp, df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r4$bws[1] * -1, r4$bws[1]),
#y.lim = c(75, 175),
#shade = TRUE,
#subset = amostra,
#h = r4$bws[1],
#scale = 5,
#ci = 95,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(A) Impact of Treatment on Hospitalizations"
)
amostra <- cbind()
state.f = factor(df$sigla_uf)
state.d = model.matrix( ~ state.f + 0) # creating fixed effects
year.f = factor(df$coorte) # creating dummies
year.d = model.matrix( ~ year.f + 0)
covsZ  = cbind(state.d, year.d) # Controls
r4 = rdrobust(
df$Y_deaths_sivep,
df$X,
p      = poli,
kernel = k,
h      = janela,
subset = amostra,
#covs   = covsZ
)
r5 = rdrobust(
df$Y_hosp,
df$X,
kernel = k,
h      = janela,
p      = poli,
subset = amostra,
#covs   = covsZ
)
summary(r4)
summary(r5)
summary(r4)
summary(r5)
df_plots <- df[abs(df$X) < r4$bws[1], ]
hosp <- rdplot(df_plots$Y_hosp, df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r4$bws[1] * -1, r4$bws[1]),
#y.lim = c(75, 175),
#shade = TRUE,
#subset = amostra,
#h = r4$bws[1],
#scale = 5,
#ci = 95,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(A) Impact of Treatment on Hospitalizations"
)
death <- rdplot(df_plots$Y_deaths_sivep , df_plots$X,
#covs = covsZ,
p = poli,
#x.lim = c(r5$bws[1] * -1, r5$bws[1]),
y.lim = c(75, 175),
#shade = TRUE,
#h = r5$bws[1],
#scale = 5,
#ci = 90,
binselect = "esmv",
kernel = k,
x.label = "STEM candidate's margin of victory",
y.label = "",
title = "(B) Impact of Treatment on Deaths"#,
# col.lines = "white"
)
death <- death$rdplot
death <- death +
theme_minimal(base_size = 15) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
death
hosp <- hosp$rdplot
hosp <- hosp +
theme_minimal(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(
axis.title = element_text(size = 10, face = "plain"),
title = element_text(size = 12),
panel.grid = element_blank()
)
hosp
plots <- hosp / death
plots
plots
ggsave(paste0(output_dir, "/figures/bigsample_plots_outcomes.png"), plot = plots,
width = 8.0,
height = 5,
units = "in")
